const os = require('os');
const moment = require('moment-timezone');
const axios = require('axios');
const fs = require('fs-extra');
const path = require('path');

let botStartTime = moment(); // Th·ªùi gian b·∫Øt ƒë·∫ßu ho·∫°t ƒë·ªông c·ªßa bot

module.exports.config = {
  name: "robots",
  version: "1.0.2", // C·∫≠p nh·∫≠t phi√™n b·∫£n
  hasPermssion: 0,
  credits: "vtb",
  description: "Hi·ªÉn th·ªã th√¥ng tin h·ªá th·ªëng v√† g·ª≠i video wibu ng·∫´u nhi√™n t·ª´ API",
  commandCategory: "Economy",
  usages: "/robots",
  cooldowns: 30,
  dependencies: ["axios", "fs-extra"],
  info: []
};

module.exports.run = async ({ api, event }) => {
  api.sendMessage("ƒêang l·∫•y d·ªØ li·ªáu t·ª´ BOT", event.threadID);

  try {
    // L·∫•y th√¥ng tin RAM
    const totalRAM = (os.totalmem() / (1024 * 1024 * 1024)).toFixed(2);
    const usedRAM = ((os.totalmem() - os.freemem()) / (1024 * 1024 * 1024)).toFixed(2);
    const freeRAM = (os.freemem() / (1024 * 1024 * 1024)).toFixed(2);

    // L·∫•y s·ªë ng∆∞·ªùi d√πng trong nh√≥m
    const numUsers = (await api.getThreadInfo(event.threadID)).participantIDs.length;

    // T√≠nh th·ªùi gian ho·∫°t ƒë·ªông c·ªßa bot
    const uptimeDuration = moment.duration(moment().diff(botStartTime));
    const uptimeString = `${uptimeDuration.days()} ng√†y ${uptimeDuration.hours()} gi·ªù ${uptimeDuration.minutes()} ph√∫t ${uptimeDuration.seconds()} gi√¢y`;

    // Hi·ªÉn th·ªã th√¥ng tin h·ªá th·ªëng
    let systemInfoMessage = "‚öôTh√¥ng tin h·ªá th·ªëng:\n";
    systemInfoMessage += `‚è∞Th·ªùi gian: ${moment().tz("Asia/Ho_Chi_Minh").format("DD-MM-YYYY HH:mm:ss")}\n`;
    systemInfoMessage += `‚è≤Th·ªùi gian ho·∫°t ƒë·ªông c·ªßa bot: ${uptimeString}\n`;
    systemInfoMessage += `üíΩT·ªïng RAM: ${totalRAM} GB\n`;
    systemInfoMessage += `üíæRAM ƒë√£ s·ª≠ d·ª•ng: ${usedRAM} GB\n`;
    systemInfoMessage += `üíøRAM c√≤n tr·ªëng: ${freeRAM} GB\n`;
    systemInfoMessage += `üñ•CPU: ${os.cpus()[0].model} ${os.cpus().length} cores\n`;
    systemInfoMessage += `üë•S·ªë ng∆∞·ªùi d√πng trong nh√≥m: ${numUsers}\n`;

    // L·∫•y d·ªØ li·ªáu t·ª´ file config
    const config = require("../../config.json");
    systemInfoMessage += `üîßPrefix: ${config['PREFIX']}\n`;
    systemInfoMessage += `üëëAdmin bot:\n${config['ADMINBOT'].map(id => `https://facebook.com/${id}`).join('\n')}\n`;

    // G·ª≠i th√¥ng tin h·ªá th·ªëng v√† video
    const response = await axios.get('https://api-bot.tamtrinh3.repl.co/images/uptime');
    const { url } = response.data;

    const videoResponse = await axios.get(url, { responseType: 'arraybuffer' });
    const videoPath = path.join(__dirname, "/cache/video.mp4");
    fs.writeFileSync(videoPath, Buffer.from(videoResponse.data, "binary"));

    api.sendMessage(
      {
        body: systemInfoMessage,
        attachment: fs.createReadStream(videoPath)
      },
      event.threadID
    );
  } catch (error) {
    console.error(error);
    api.sendMessage("ƒê√£ x·∫£y ra l·ªói khi l·∫•y th√¥ng tin t·ª´ API ho·∫∑c x·ª≠ l√Ω.", event.threadID);
  }
};